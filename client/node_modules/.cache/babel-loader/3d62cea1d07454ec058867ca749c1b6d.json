{"ast":null,"code":"import { CREATE, UPDATE, DELETE, FETCH_POST, FETCH_ALL, FETCH_BY_SEARCH, START_LOADING, END_LOADING, COMMENT } from \"../constants/actionTypes\";\nimport * as api from '../api';\nexport const getPost = id => async dispatch => {\n  try {\n    dispatch({\n      type: START_LOADING\n    });\n    const {\n      data\n    } = await api.fetchPost(id);\n    //dispatch({ type: FETCH_POST, payload: { post: data } });\n    dispatch({\n      type: FETCH_POST,\n      payload: data\n    });\n    dispatch({\n      type: END_LOADING\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getPosts = page => async dispatch => {\n  try {\n    dispatch({\n      type: START_LOADING\n    });\n    const {\n      data\n    } = await api.fetchPosts(page);\n    dispatch({\n      type: FETCH_ALL,\n      payload: data\n    });\n    dispatch({\n      type: END_LOADING\n    });\n  } catch (error) {\n    console.log(\"Get Post Error: \" + error);\n  }\n};\nexport const getPostsBySearch = searchQuery => async dispatch => {\n  try {\n    dispatch({\n      type: START_LOADING\n    });\n    const {\n      data: {\n        data\n      }\n    } = await api.fetchPostsBySearch(searchQuery);\n    dispatch({\n      type: FETCH_BY_SEARCH,\n      payload: data\n    });\n    dispatch({\n      type: END_LOADING\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const createPost = (post, navigate) => async dispatch => {\n  try {\n    dispatch({\n      type: START_LOADING\n    });\n    const {\n      data\n    } = await api.createPost(post);\n    navigate(`/posts/${data._id}`);\n    dispatch({\n      type: CREATE,\n      payload: data\n    });\n  } catch (error) {\n    console.log(\"Create Post Error: \" + error);\n  }\n};\nexport const updatePost = (id, post) => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.updatePost(id, post);\n    dispatch({\n      type: UPDATE,\n      payload: data\n    });\n  } catch (error) {\n    console.log(\"Update Post Error: \" + error);\n  }\n};\nexport const deletePost = id => async dispatch => {\n  try {\n    await api.deletePost(id);\n    dispatch({\n      type: DELETE,\n      payload: id\n    });\n  } catch (error) {\n    console.log(\"Delete Post Error: \" + error);\n  }\n};\nexport const likePost = id => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.likePost(id);\n    dispatch({\n      type: UPDATE,\n      payload: data\n    });\n  } catch (error) {\n    console.log(\"Like Post Error: \" + error);\n  }\n};\nexport const commentPost = (comment, id) => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.comment(comment, id);\n    dispatch({\n      type: COMMENT,\n      payload: data\n    });\n    return data.comments; // Ensure that this returns the updated comments array\n  } catch (error) {\n    console.log('Error in commentPost:', error);\n  }\n};","map":{"version":3,"names":["CREATE","UPDATE","DELETE","FETCH_POST","FETCH_ALL","FETCH_BY_SEARCH","START_LOADING","END_LOADING","COMMENT","api","getPost","id","dispatch","type","data","fetchPost","payload","error","console","log","getPosts","page","fetchPosts","getPostsBySearch","searchQuery","fetchPostsBySearch","createPost","post","navigate","_id","updatePost","deletePost","likePost","commentPost","comment","comments"],"sources":["E:/Walk Safe/client/src/actions/posts.js"],"sourcesContent":["import {\n  CREATE,\n  UPDATE,\n  DELETE,\n  FETCH_POST,\n  FETCH_ALL,\n  FETCH_BY_SEARCH,\n  START_LOADING,\n  END_LOADING,\n  COMMENT,\n} from \"../constants/actionTypes\";\nimport * as api from '../api';\n\nexport const getPost = (id) => async (dispatch) => {\n  try {\n    dispatch({ type: START_LOADING });\n    const { data } = await api.fetchPost(id);\n    //dispatch({ type: FETCH_POST, payload: { post: data } });\n    dispatch({ type: FETCH_POST, payload: data });\n    dispatch({ type: END_LOADING });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getPosts = (page) => async (dispatch) => {\n  try {\n    dispatch({ type: START_LOADING});\n    const { data } = await api.fetchPosts(page);\n    dispatch({ type: FETCH_ALL, payload: data });\n    dispatch({ type: END_LOADING });\n  } catch (error) {\n    console.log(\"Get Post Error: \" + error);\n  }\n};\n\nexport const getPostsBySearch = (searchQuery) => async (dispatch) => {\n  try {\n    dispatch({ type: START_LOADING });\n    const { data: { data } } = await api.fetchPostsBySearch(searchQuery);\n    dispatch({ type: FETCH_BY_SEARCH, payload: data });\n    dispatch({ type: END_LOADING });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const createPost = (post, navigate) => async (dispatch) => {\n  try {\n    dispatch({ type: START_LOADING });\n    const { data } = await api.createPost(post);\n    navigate(`/posts/${data._id}`);\n    dispatch({type: CREATE, payload: data});\n  } catch (error) {\n    console.log(\"Create Post Error: \" + error);\n  }\n};\n\nexport const updatePost = (id, post) => async (dispatch) => {\n  try {\n     const { data } = await api.updatePost(id, post);\n     dispatch({ type: UPDATE, payload: data});\n  } catch (error) {\n    console.log(\"Update Post Error: \" + error);\n  }\n};\n\nexport const deletePost = (id) => async (dispatch) => {\n  try {\n    await api.deletePost(id);\n    dispatch({ type: DELETE, payload: id});\n  } catch (error) {\n     console.log(\"Delete Post Error: \" + error);\n  }\n}\n\nexport const likePost = (id) => async (dispatch) => {\n  try {\n    const { data } = await api.likePost(id);\n    dispatch({ type: UPDATE, payload: data });\n  } catch (error) {\n    console.log(\"Like Post Error: \" + error);\n  }\n}\n\n\nexport const commentPost = (comment, id) => async (dispatch) => {\n  try {\n      const { data } = await api.comment(comment, id);\n      dispatch({ type: COMMENT, payload: data });\n      return data.comments;  // Ensure that this returns the updated comments array\n  } catch (error) {\n      console.log('Error in commentPost:', error);\n  }\n};\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}