{"ast":null,"code":"import { AUTH } from \"../constants/actionTypes\";\nimport * as api from \"../api/index.js\";\n\n// Signin action\nexport const signin = (formData, history) => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.signIn(formData);\n    dispatch({\n      type: AUTH,\n      data\n    });\n    history.push('/'); // use push for navigation\n  } catch (error) {\n    console.error(\"Signin Error:\", error); // Improved error logging\n    // Optionally, dispatch an error action or show an error message to the user\n  }\n};\n\n// Signup action\nexport const signup = (formData, history) => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.signUp(formData);\n    dispatch({\n      type: AUTH,\n      data\n    });\n    history.push('/'); // use push for navigation\n  } catch (error) {\n    console.error(\"Signup Error:\", error); // Improved error logging\n    // Optionally, dispatch an error action or show an error message to the user\n  }\n};","map":{"version":3,"names":["AUTH","api","signin","formData","history","dispatch","data","signIn","type","push","error","console","signup","signUp"],"sources":["E:/Walk Safe/client/src/actions/auth.js"],"sourcesContent":["import { AUTH } from \"../constants/actionTypes\";\nimport * as api from \"../api/index.js\";\n\n// Signin action\nexport const signin = (formData, history) => async (dispatch) => {\n  try {\n    const { data } = await api.signIn(formData);\n    dispatch({ type: AUTH, data });\n    history.push('/'); // use push for navigation\n  } catch (error) {\n    console.error(\"Signin Error:\", error); // Improved error logging\n    // Optionally, dispatch an error action or show an error message to the user\n  }\n};\n\n// Signup action\nexport const signup = (formData, history) => async (dispatch) => {\n  try {\n    const { data } = await api.signUp(formData);\n    dispatch({ type: AUTH, data });\n    history.push('/'); // use push for navigation\n  } catch (error) {\n    console.error(\"Signup Error:\", error); // Improved error logging\n    // Optionally, dispatch an error action or show an error message to the user\n  }\n};\n"],"mappings":"AAAA,SAASA,IAAI,QAAQ,0BAA0B;AAC/C,OAAO,KAAKC,GAAG,MAAM,iBAAiB;;AAEtC;AACA,OAAO,MAAMC,MAAM,GAAGA,CAACC,QAAQ,EAAEC,OAAO,KAAK,MAAOC,QAAQ,IAAK;EAC/D,IAAI;IACF,MAAM;MAAEC;IAAK,CAAC,GAAG,MAAML,GAAG,CAACM,MAAM,CAACJ,QAAQ,CAAC;IAC3CE,QAAQ,CAAC;MAAEG,IAAI,EAAER,IAAI;MAAEM;IAAK,CAAC,CAAC;IAC9BF,OAAO,CAACK,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;EACrB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,eAAe,EAAEA,KAAK,CAAC,CAAC,CAAC;IACvC;EACF;AACF,CAAC;;AAED;AACA,OAAO,MAAME,MAAM,GAAGA,CAACT,QAAQ,EAAEC,OAAO,KAAK,MAAOC,QAAQ,IAAK;EAC/D,IAAI;IACF,MAAM;MAAEC;IAAK,CAAC,GAAG,MAAML,GAAG,CAACY,MAAM,CAACV,QAAQ,CAAC;IAC3CE,QAAQ,CAAC;MAAEG,IAAI,EAAER,IAAI;MAAEM;IAAK,CAAC,CAAC;IAC9BF,OAAO,CAACK,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;EACrB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,eAAe,EAAEA,KAAK,CAAC,CAAC,CAAC;IACvC;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module"}